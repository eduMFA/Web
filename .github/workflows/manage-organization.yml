name: Add Organization to eduMFA
on:
  issues:
    types: [ opened ]

permissions:
  pull-requests: write
  contents: write
  issues: write
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  open-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Parse Issue Body
        id: extract_info
        run: |
          ISSUE_BODY="${{ github.event.issue.body }}"

          declare -A fields=(
            ["ORG_NAME"]="Organization Name"
            ["ORG_URL"]="Organization URL"
            ["ORG_IMAGE"]="Organization Image"
            ["ORG_PHASE"]="Implementation Phase"
            ["ORG_TOKENS"]="Token Types"
            ["ORG_USER_COUNT"]="Approximate eduMFA enrolled users"
          )

          for key in "${!fields[@]}"; do
            value=$(echo "$ISSUE_BODY" | awk "/### ${fields[$key]}/{flag=1; next} /^###/{flag=0} flag" | awk 'NF')
            if [[ "$key" == "ORG_IMAGE" && "$value" =~ \!\[.*\]\((.*)\) ]]; then
              value="${BASH_REMATCH[1]}"
            fi
            if [[ "$value" == "_No response_" ]]; then
              value="null"
            fi
            echo "$key=$value" >> $GITHUB_ENV
          done
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          npm install -g slugify
          npm link slugify
      - name: Update data
        id: update_data
        uses: actions/github-script@v7
        with:
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/scripts/create_organization_pr.js`);
            try {
              core.setOutput('valid', String(await script({github, context, core})));
            } catch (error) {
              core.setFailed(`Script execution failed: ${error.message}`);
            }
      - name: Commit changes
        if: steps.update_data.outputs.valid == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add public/organizations/$ORG_NAME_SLUG.$IMAGE_EXT data/users.json
          git commit -m "Add organization $ORG_NAME"
      - name: Create Pull Request
        if: steps.update_data.outputs.valid == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Added ${{ env.ORG_NAME }} organization"
          branch: 'organization/${{ env.ORG_NAME_SLUG }}'
          delete-branch: true
          title: "[Org] Add ${{ env.ORG_NAME }}"
          body: |
            This PR adds the organization ${{ env.ORG_NAME }} to the site.
            > [!NOTE]
            > This is an automated action.
            
            Closes #${{ github.event.issue.number }}
          labels: organization
          reviewers: luc1412
      - name: Comment on issue
        if: steps.update_data.outputs.valid == 'true'
        run: |
          gh issue comment ${{ github.event.issue.number }} --body "Thank you for your submission!
          A pull request has been automatically created to add your organization to the site. If your pull request contains any errors, close this issue and create a new one with the correct information."
